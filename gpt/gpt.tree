#!/bin/bash

# find . -print | grep -vE "node_modules|\.next|.*\.pyc$|.*\.js.map$" | sed 's;[^/]*/;|____;g;s;____|; |;g' && find . -type f ! -path "*/node_modules/*" ! -name "*.pyc" ! -name "*.js.map" -exec echo -e "\n# File: {}\n\n\`\`\`" \; -exec cat {} \; -exec echo "\`\`\`" \;

TARGET_DIRECTORY="$1"
if [ -z "${TARGET_DIRECTORY}" ]
then
    TARGET_DIRECTORY="."
fi

if [ ! -d "${TARGET_DIRECTORY}" ]
then
    echo "ERROR: The target directory does not exist"
    exit 1
fi

if [[ "${TARGET_DIRECTORY}" == "." || "${TARGET_DIRECTORY}" == "./" || "${TARGET_DIRECTORY}" == "$(pwd)" ]]
then
    echo "ERROR: The target directory cannot be the same as the current directory"
    exit 1
fi

echo ""
echo "# Directory tree: ${TARGET_DIRECTORY}"
echo ""
echo  '```'
find ${TARGET_DIRECTORY} -print \
    | grep -v node_modules \
    | grep -v "\.next" \
    | grep -v *.pyc$ \
    | grep -v *.js.map$ \
    | sed -e 's;[^/]*/;|____;g;s;____|; |;g' \
    | grep -v node_modules
echo  '```'

FILES=$(
    find "$TARGET_DIRECTORY" -type f \
        | grep -v __pycache__ \
        | grep -v .pyc \
        | grep -v __init__ \
        | grep -v "\.next" \
        | grep -v node_modules
)

for FILE in $FILES
do
    echo ""
    echo ""
    echo "# File: ${FILE}"
    echo ""
    echo  '```'
    cat "$FILE"
    echo  '```'
done
